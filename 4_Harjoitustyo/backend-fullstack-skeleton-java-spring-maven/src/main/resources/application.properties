#server.port: 9000
#management.server.port: 9001
#management.server.address: 127.0.0.1

# https://docs.spring.io/spring-boot/docs/current/reference/html/features.html#features.profiles
spring.profiles.default=dev


## Spring JPA e.g. as a Maven dependency (spring-boot-starter-data-jpa) implements CRUD interface and can be used via Java code (camelCase syntax)
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# https://stackoverflow.com/questions/37066024/what-is-the-mariadb-dialect-class-name-for-hibernate
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MariaDBDialect

# Show the SQL statement in console that Hibernate executes
# 10. 'How-to' Guides: 10.8.5. Configure JPA Properties
# https://docs.spring.io/spring-boot/docs/2.5.0/reference/htmlsingle/#howto.data-access.jpa-properties
#spring.jpa.show-sql=true

# What Hibernate ddl auto should do on startup (create, create-drop, validate, update)
# https://docs.spring.io/spring-boot/docs/2.5.0/reference/htmlsingle/#howto.data-initialization.using-hibernate
spring.jpa.hibernate.ddl-auto = update


## DO NOT SAVE YOU URL, USERNAME NOR PASSWORD TO VERSION CONTROL SYSTEM
# Spring datasource for JDBC e.g. as a Maven dependency (spring-boot-starter-jdbc) makes it possible to execution
# kind of SQL-type complex statements
# 10. 'How-to' Guides: 10.8. Data Access
# https://docs.spring.io/spring-boot/docs/2.5.0/reference/htmlsingle/#howto.data-access
# JDBC default endpoint on PostrgeSQL (in port 5432) comes from username in credentials which are used to login to server
spring.datasource.url=jdbc:postgresql://localhost:5432/USER_NAME
spring.datasource.username=USER_NAME
spring.datasource.password=SECRET
spring.datasource.generate-unique-name=false

# Spring Boot Actuator
# https://docs.spring.io/spring-boot/docs/2.5.0/reference/htmlsingle/#application-properties.actuator
management.endpoints.web.cors.allowed-origins=//localhost
# https://github.com/spring-projects/spring-boot/blob/v2.5.0/spring-boot-project/spring-boot-actuator-autoconfigure/src/main/java/org/springframework/boot/actuate/autoconfigure/endpoint/web/CorsEndpointProperties.java
management.endpoints.web.cors.allowed-methods=GET,POST
# https://docs.spring.io/spring-boot/docs/2.5.0/reference/htmlsingle/#actuator.endpoints.health
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always
## management.endpoint.YOUR_ENDPOINT_NAME.enabled=true
## management.endpoints.web.exposure.include=health,info,YOUR_ENDPOINT_NAME

#Maven Dependency "spring-boot-starter-data-rest"
##SpringData @Entity endpoint(s)
spring.data.rest.base-path=/my_api_name
###Swagger endpoint will be at /v2/api-docs and UI will br at /swagger-ui